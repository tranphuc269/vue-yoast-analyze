{"version":3,"sources":["../../../src/researches/getProminentWordsForInsights.js"],"names":["getProminentWordsForInsights","paper","researcher","text","getText","language","getLocale","morphologyData","getData","abbreviations","prominentWordsFromText","collapsedWords"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AAQA;;;;;;;;AAQA,SAASA,4BAAT,CAAuCC,KAAvC,EAA8CC,UAA9C,EAA2D;AAC1D,OAAMC,OAAOF,MAAMG,OAAN,EAAb;AACA,OAAMC,WAAW,2BAAaJ,MAAMK,SAAN,EAAb,CAAjB;AACA,OAAMC,iBAAiB,mBAAKL,WAAWM,OAAX,CAAoB,YAApB,CAAL,EAAyCH,QAAzC,EAAmD,KAAnD,CAAvB;;AAEA,OAAMI,gBAAgB,oDAAuBN,IAAvB,CAAtB;;AAEA,OAAMO,yBAAyB,gDAAmBP,IAAnB,EAAyBM,aAAzB,EAAwCJ,QAAxC,EAAkDE,cAAlD,CAA/B;;AAEA,OAAMI,iBAAiB,2DAA8BD,sBAA9B,CAAvB;AACA,kDAAoBC,cAApB;;AAEA;;;;AAIA,QAAO,oBAAM,mDAAsBA,cAAtB,EAAsC,CAAtC,CAAN,EAAiD,EAAjD,CAAP;AACA;;kBAEcX,4B","file":"getProminentWordsForInsights.js","sourcesContent":["import { get, take } from \"lodash-es\";\nimport getLanguage from \"../helpers/getLanguage\";\nimport {\n\tcollapseProminentWordsOnStem,\n\tfilterProminentWords,\n\tgetProminentWords,\n\tretrieveAbbreviations,\n\tsortProminentWords,\n} from \"../stringProcessing/determineProminentWords\";\n\n/**\n * Retrieves the prominent words from the given paper.\n *\n * @param {Paper} paper The paper to determine the prominent words of.\n * @param {Researcher} researcher The researcher to use for analysis.\n *\n * @returns {WordCombination[]} Prominent words for this paper, filtered and sorted.\n */\nfunction getProminentWordsForInsights( paper, researcher ) {\n\tconst text = paper.getText();\n\tconst language = getLanguage( paper.getLocale() );\n\tconst morphologyData = get( researcher.getData( \"morphology\" ), language, false );\n\n\tconst abbreviations = retrieveAbbreviations( text );\n\n\tconst prominentWordsFromText = getProminentWords( text, abbreviations, language, morphologyData );\n\n\tconst collapsedWords = collapseProminentWordsOnStem( prominentWordsFromText );\n\tsortProminentWords( collapsedWords );\n\n\t/*\n\t * Collapse the list of prominent words on stems, sort it, filter out all words that occur less than\n\t * 5 times in the text. Return the 20 top items from this list.\n\t */\n\treturn take( filterProminentWords( collapsedWords, 5 ), 20 );\n}\n\nexport default getProminentWordsForInsights;\n"]}