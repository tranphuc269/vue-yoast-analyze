{"version":3,"sources":["../../../src/researches/relevantWords.js"],"names":["relevantWords","paper","text","getText","metadescription","getDescription","title","getTitle","result","hasMetaDescription","hasTitle","prominentWords","getLocale"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAEA;;;;;;;;;;AAUA,SAASA,aAAT,CAAwBC,KAAxB,EAAgC;AAC/B,OAAMC,OAAOD,MAAME,OAAN,EAAb;AACA,OAAMC,kBAAkBH,MAAMI,cAAN,EAAxB;AACA,OAAMC,QAAQL,MAAMM,QAAN,EAAd;;AAEA,OAAMC,SAAS,EAAf;AACAA,QAAOC,kBAAP,GAA4BL,oBAAoB,EAAhD;AACAI,QAAOE,QAAP,GAAkBJ,UAAU,EAA5B;AACAE,QAAOG,cAAP,GAAwB,EAAxB;;AAEA;;;;AAIA,KAAK,0BAAYT,IAAZ,IAAqB,GAA1B,EAAgC;AAC/B,SAAOM,MAAP;AACA;;AAEDA,QAAOG,cAAP,GAAwB,qCAAkBV,MAAME,OAAN,EAAlB,EAAmCF,MAAMW,SAAN,EAAnC,CAAxB;AACA,QAAOJ,MAAP;AACA;;kBAGcR,a","file":"relevantWords.js","sourcesContent":["import { getRelevantWords } from \"../stringProcessing/relevantWords\";\nimport countWords from \"../stringProcessing/countWords\";\n\n/**\n * Retrieves the relevant words from the given paper.\n *\n * @param {Paper} paper The paper to determine the relevant words of.\n *\n * @returns {Object}            result                     A compound result object.\n * @returns {WordCombination[]} result.prominentWords      Relevant words for this paper, filtered and sorted.\n * @returns {boolean}           result.hasMetaDescription  Whether the metadescription is available in the input paper.\n * @returns {boolean}           result.hasTitle            Whether the title is available in the input paper.\n */\nfunction relevantWords( paper ) {\n\tconst text = paper.getText();\n\tconst metadescription = paper.getDescription();\n\tconst title = paper.getTitle();\n\n\tconst result = {};\n\tresult.hasMetaDescription = metadescription !== \"\";\n\tresult.hasTitle = title !== \"\";\n\tresult.prominentWords = [];\n\n\t/**\n\t * We only want to return suggestions (and spend time calculating prominent words) if the text is at least 300 words\n\t * and has a title or a metadescription of if the text is at least 400 words if it has neither.\n\t */\n\tif ( countWords( text ) < 400 ) {\n\t\treturn result;\n\t}\n\n\tresult.prominentWords = getRelevantWords( paper.getText(), paper.getLocale() );\n\treturn result;\n}\n\n\nexport default relevantWords;\n"]}