{"version":3,"sources":["../../../src/researches/getProminentWordsForInternalLinking.js"],"names":["getProminentWordsForInternalLinking","paper","researcher","text","getText","metadescription","getDescription","title","getTitle","result","hasMetaDescription","hasTitle","prominentWords","textLength","language","getLocale","morphologyData","getData","subheadings","map","subheading","attributes","getKeyword","getSynonyms","join","abbreviations","concat","prominentWordsFromText","prominentWordsFromPaperAttributes","forEach","relevantWord","setOccurrences","getOccurrences","collapsedWords","minimumNumberOfOccurrences"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;AAQA;;;;AAEA;;;;;;;;;;;AAWA,SAASA,mCAAT,CAA8CC,KAA9C,EAAqDC,UAArD,EAAkE;AACjE,OAAMC,OAAOF,MAAMG,OAAN,EAAb;AACA,OAAMC,kBAAkBJ,MAAMK,cAAN,EAAxB;AACA,OAAMC,QAAQN,MAAMO,QAAN,EAAd;;AAEA,OAAMC,SAAS,EAAf;AACAA,QAAOC,kBAAP,GAA4BL,oBAAoB,EAAhD;AACAI,QAAOE,QAAP,GAAkBJ,UAAU,EAA5B;AACAE,QAAOG,cAAP,GAAwB,EAAxB;;AAEA;;;AAGA,OAAMC,aAAa,0BAAYV,IAAZ,CAAnB;AACA,KAAKU,aAAa,GAAlB,EAAwB;AACvB,SAAOJ,MAAP;AACA;;AAED,OAAMK,WAAW,2BAAab,MAAMc,SAAN,EAAb,CAAjB;AACA,OAAMC,iBAAiB,mBAAKd,WAAWe,OAAX,CAAoB,YAApB,CAAL,EAAyCH,QAAzC,EAAmD,KAAnD,CAAvB;;AAEA,OAAMI,cAAc,4CAAwBf,IAAxB,EAA+BgB,GAA/B,CAAoCC,cAAcA,WAAY,CAAZ,CAAlD,CAApB;AACA,OAAMC,aAAa,CAClBpB,MAAMqB,UAAN,EADkB,EAElBrB,MAAMsB,WAAN,EAFkB,EAGlBhB,KAHkB,EAIlBF,eAJkB,EAKlBa,YAAYM,IAAZ,CAAkB,GAAlB,CALkB,CAAnB;;AAQA,OAAMC,gBAAgB,oDAAuBtB,KAAKuB,MAAL,CAAaL,WAAWG,IAAX,CAAiB,GAAjB,CAAb,CAAvB,CAAtB;;AAEA,OAAMG,yBAAyB,gDAAmB,+CAA2BxB,IAA3B,CAAnB,EAAsDsB,aAAtD,EAAqEX,QAArE,EAA+EE,cAA/E,CAA/B;;AAEA,OAAMY,oCAAoC,mEAAsCP,UAAtC,EAAkDI,aAAlD,EAAiEX,QAAjE,EAA2EE,cAA3E,CAA1C;;AAEA;;;;AAIAY,mCAAkCC,OAAlC,CAA2CC,gBAAgBA,aAAaC,cAAb,CAA6BD,aAAaE,cAAb,KAAgC,CAA7D,CAA3D;;AAEA,OAAMC,iBAAiB,2DAA8BL,kCAAkCF,MAAlC,CAA0CC,sBAA1C,CAA9B,CAAvB;AACA,kDAAoBM,cAApB;;AAEA;;;;;;;AAOA,KAAIC,6BAA6B,CAAjC;;AAEA,KAAK,CAAElB,cAAP,EAAwB;AACvBkB,+BAA6B,CAA7B;AACA;;AAED;;;;AAIAzB,QAAOG,cAAP,GAAwB,oBAAM,mDAAsBqB,cAAtB,EAAsCC,0BAAtC,CAAN,EAA0E,GAA1E,CAAxB;;AAEA,QAAOzB,MAAP;AACA;;kBAEcT,mC","file":"getProminentWordsForInternalLinking.js","sourcesContent":["import { get, take } from \"lodash-es\";\nimport getLanguage from \"../helpers/getLanguage\";\nimport countWords from \"../stringProcessing/countWords\";\nimport {\n\tcollapseProminentWordsOnStem,\n\tfilterProminentWords,\n\tgetProminentWords,\n\tgetProminentWordsFromPaperAttributes,\n\tretrieveAbbreviations,\n\tsortProminentWords,\n} from \"../stringProcessing/determineProminentWords\";\nimport { getSubheadingsTopLevel, removeSubheadingsTopLevel } from \"../stringProcessing/getSubheadings\";\n\n/**\n * Retrieves the prominent words from the given paper.\n *\n * @param {Paper}       paper       The paper to determine the prominent words of.\n * @param {Researcher}  researcher  The researcher to use for analysis.\n *\n * @returns {Object}          result                    A compound result object.\n * @returns {ProminentWord[]} result.prominentWords     Prominent words for this paper, filtered and sorted.\n * @returns {boolean}         result.hasMetaDescription Whether the metadescription is available in the input paper.\n * @returns {boolean}         result.hasTitle           Whether the title is available in the input paper.\n */\nfunction getProminentWordsForInternalLinking( paper, researcher ) {\n\tconst text = paper.getText();\n\tconst metadescription = paper.getDescription();\n\tconst title = paper.getTitle();\n\n\tconst result = {};\n\tresult.hasMetaDescription = metadescription !== \"\";\n\tresult.hasTitle = title !== \"\";\n\tresult.prominentWords = [];\n\n\t/**\n\t * We only want to return suggestions (and spend time calculating prominent words) if the text is at least 100 words.\n \t */\n\tconst textLength = countWords( text );\n\tif ( textLength < 100 ) {\n\t\treturn result;\n\t}\n\n\tconst language = getLanguage( paper.getLocale() );\n\tconst morphologyData = get( researcher.getData( \"morphology\" ), language, false );\n\n\tconst subheadings = getSubheadingsTopLevel( text ).map( subheading => subheading[ 2 ] );\n\tconst attributes = [\n\t\tpaper.getKeyword(),\n\t\tpaper.getSynonyms(),\n\t\ttitle,\n\t\tmetadescription,\n\t\tsubheadings.join( \" \" ),\n\t];\n\n\tconst abbreviations = retrieveAbbreviations( text.concat( attributes.join( \" \" ) ) );\n\n\tconst prominentWordsFromText = getProminentWords( removeSubheadingsTopLevel( text ), abbreviations, language, morphologyData );\n\n\tconst prominentWordsFromPaperAttributes = getProminentWordsFromPaperAttributes( attributes, abbreviations, language, morphologyData );\n\n\t/*\n\t * If a word is used in any of the attributes, its weight is automatically high.\n\t * To make sure the word survives weight filters and gets saved in the database, make the number of occurrences times-3.\n\t */\n\tprominentWordsFromPaperAttributes.forEach( relevantWord => relevantWord.setOccurrences( relevantWord.getOccurrences() * 3 ) );\n\n\tconst collapsedWords = collapseProminentWordsOnStem( prominentWordsFromPaperAttributes.concat( prominentWordsFromText ) );\n\tsortProminentWords( collapsedWords );\n\n\t/*\n\t * If morphology data are available for a language, the minimum number of occurrences to consider a word to be prominent is 4.\n\t * This minimum number was chosen in order to avoid premature suggestions of words from the paper attributes.\n\t * These get a times-3 boost and would therefore be prominent with just 1 occurrence.\n\t *\n\t * If morphology data are not available, and therefore word forms are not recognized, the minimum threshold is lowered to 2.\n\t */\n\tlet minimumNumberOfOccurrences = 4;\n\n\tif ( ! morphologyData ) {\n\t\tminimumNumberOfOccurrences = 2;\n\t}\n\n\t/*\n\t * Return the 100 top items from the collapsed and sorted list. The number is picked deliberately to prevent larger\n\t * articles from getting too long of lists.\n\t */\n\tresult.prominentWords = take( filterProminentWords( collapsedWords, minimumNumberOfOccurrences ), 100 );\n\n\treturn result;\n}\n\nexport default getProminentWordsForInternalLinking;\n\n"]}