{"version":3,"sources":["../../../../src/morphology/farsi/createBasicWordForms.js"],"names":["createBasicWordForms","createForms","word","prefix","suffixes1","suffixes2","suffixes3","suffixes4","createdForms","push","endsWith","map","suffix","test","stemWord","suffixesAndReplacements","startsWith","slice","length","forms","stemmedWord"],"mappings":";;;;;QAuEgBA,oB,GAAAA,oB;;AAvEhB;;AACA;;;;;;;AAOA,MAAMC,cAAc,SAAdA,WAAc,CAAUC,IAAV,EAAiB;AACpC,OAAMC,SAAS,GAAf;AACA;AACA,OAAMC,YAAY,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,CAAlB;AACA;AACA,OAAMC,YAAY,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAlB;AACA;AACA,OAAMC,YAAY,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,CAAlB;AACA;AACA,OAAMC,YAAY,CAAE,IAAF,EAAQ,GAAR,CAAlB;;AAEA,OAAMC,eAAe,EAArB;;AAEA;AACAA,cAAaC,IAAb,CAAmBN,SAASD,IAA5B;;AAEA;AACA,KAAKA,KAAKQ,QAAL,CAAe,IAAf,CAAL,EAA6B;AAC5BF,eAAaC,IAAb,CAAmB,GAAGF,UAAUI,GAAV,CAAeC,UAAUV,OAAOU,MAAhC,CAAtB;AACA,EAFD,MAEO,IAAK,cAAcC,IAAd,CAAoBX,IAApB,CAAL,EAAkC;AACxCM,eAAaC,IAAb,CAAmB,GAAGH,UAAUK,GAAV,CAAeC,UAAUV,OAAOU,MAAhC,CAAtB;AACA,EAFM,MAEA,IAAK,WAAWC,IAAX,CAAiBX,IAAjB,CAAL,EAA+B;AACrCM,eAAaC,IAAb,CAAmB,GAAGJ,UAAUM,GAAV,CAAeC,UAAUV,OAAOU,MAAhC,CAAtB;AACA,EAFM,MAEA;AACN,MAAKV,KAAKQ,QAAL,CAAe,GAAf,CAAL,EAA6B;AAC5BF,gBAAaC,IAAb,CAAmBP,OAAO,KAA1B;AACA;AACDM,eAAaC,IAAb,CAAmB,GAAGL,UAAUO,GAAV,CAAeC,UAAUV,OAAOU,MAAhC,CAAtB;AACA;AACD,QAAOJ,YAAP;AACA,CA9BD;;AAgCA;;;;;;;AAOA,MAAMM,WAAW,SAAXA,QAAW,CAAUZ,IAAV,EAAiB;AACjC,OAAMC,SAAS,GAAf;AACA,OAAMY,0BAA0B,CAC/B,CAAE,qBAAF,EAAyB,IAAzB,CAD+B,EAE/B,CAAE,iCAAF,EAAqC,IAArC,CAF+B,EAG/B,CAAE,SAAF,EAAa,IAAb,CAH+B,EAI/B,CAAE,SAAF,EAAa,IAAb,CAJ+B,EAK/B,CAAE,wBAAF,EAA4B,EAA5B,CAL+B,CAAhC;AAOA;AACA,KAAKb,KAAKc,UAAL,CAAiBb,MAAjB,CAAL,EAAiC;AAChC,SAAOD,KAAKe,KAAL,CAAY,CAAZ,EAAef,KAAKgB,MAApB,CAAP;AACA;AACD;AACA,QAAO,6CAA2BhB,IAA3B,EAAiCa,uBAAjC,CAAP;AACA,CAfD;;AAiBA;;;;;;;AAOO,SAASf,oBAAT,CAA+BE,IAA/B,EAAsC;AAC5C,OAAMiB,QAAQ,EAAd;;AAEA;;;;;;AAMAA,OAAMV,IAAN,CAAY,GAAGR,YAAaC,IAAb,CAAf;;AAEA;;;;AAIA,OAAMkB,cAAcN,SAAUZ,IAAV,CAApB;AACA,KAAKkB,WAAL,EAAmB;AAClBD,QAAMV,IAAN,CAAYW,WAAZ;AACAD,QAAMV,IAAN,CAAY,GAAGR,YAAamB,WAAb,CAAf;AACA;AACD,QAAOD,KAAP;AACA","file":"createBasicWordForms.js","sourcesContent":["import { searchAndReplaceWithRegex } from \"../morphoHelpers/regexHelpers\";\n/**\n * Creates the basic affixed-forms of a given Farsi word\n *\n * @param {string} word      The word to check\n *\n * @returns {Array} The created forms\n */\nconst createForms = function( word ) {\n\tconst prefix = \"ن\";\n\t// Regular suffixes\n\tconst suffixes1 = [ \"مان\", \"شان\", \"تان\", \"ش\", \"ت\", \"م\", \"ی\" ];\n\t// Suffixes for words that end in ا or و\n\tconst suffixes2 = [ \"یی\", \"یم\", \"یت\", \"یش\" ];\n\t// Suffixes for words that end in silent ه\n\tconst suffixes3 = [ \"‌ای\", \"‌یی\", \"‌ام\", \"‌ات\", \"‌اش\" ];\n\t// Suffixes for words that end in ها\n\tconst suffixes4 = [ \"یی\", \"ی\" ];\n\n\tconst createdForms = [];\n\n\t// Create prefixed form.\n\tcreatedForms.push( prefix + word );\n\n\t// Create suffixed forms using suffixes from one of the four groups, depending on the word's ending.\n\tif ( word.endsWith( \"ها\" ) ) {\n\t\tcreatedForms.push( ...suffixes4.map( suffix => word + suffix ) );\n\t} else if ( /([^وای]ه)$/i.test( word ) ) {\n\t\tcreatedForms.push( ...suffixes3.map( suffix => word + suffix ) );\n\t} else if ( /([وا])$/i.test( word ) ) {\n\t\tcreatedForms.push( ...suffixes2.map( suffix => word + suffix ) );\n\t} else {\n\t\tif ( word.endsWith( \"ی\" )  ) {\n\t\t\tcreatedForms.push( word + \"‌ای\" );\n\t\t}\n\t\tcreatedForms.push( ...suffixes1.map( suffix => word + suffix ) );\n\t}\n\treturn createdForms;\n};\n\n/**\n * Stem the basic affixes of a given Farsi word\n *\n * @param {string} word  The word to check\n *\n * @returns {string}    The stemmed word\n */\nconst stemWord = function( word ) {\n\tconst prefix = \"ن\";\n\tconst suffixesAndReplacements = [\n\t\t[ \"(و|ا)(یش|یت|یم|یی)$\", \"$1\" ],\n\t\t[ \"([^وای]ه)(‌یی|‌ای|‌اش|‌ات|‌ام)$\", \"$1\" ],\n\t\t[ \"(ی)‌ای$\", \"$1\" ],\n\t\t[ \"(ها)یی$\", \"$1\" ],\n\t\t[ \"(مان|شان|تان|ش|ت|م|ی)$\", \"\" ],\n\t];\n\t// Remove prefix.\n\tif ( word.startsWith( prefix ) ) {\n\t\treturn word.slice( 1, word.length );\n\t}\n\t// Search for and remove suffixes.\n\treturn searchAndReplaceWithRegex( word, suffixesAndReplacements );\n};\n\n/**\n * Creates basic word forms for a given Farsi word.\n *\n * @param {string} word     The word for which to create basic word forms.\n *\n * @returns {Array}        Prefixed and de-prefixed variations of a word.\n */\nexport function createBasicWordForms( word ) {\n\tconst forms = [];\n\n\t/*\n\t * Add prefixes and suffixes to the input word. We always do this, since some words\n\t * beginning with an affix-like letter might be exceptions where this is the\n\t * actual first letter or last letter of the word.\n\t */\n\n\tforms.push( ...createForms( word ) );\n\n\t/*\n\t * If a word starts with a prefix or is it ends with one of the suffixes, we strip it and create all possible\n\t * affixed forms based on this stem.\n\t */\n\tconst stemmedWord = stemWord( word );\n\tif ( stemmedWord ) {\n\t\tforms.push( stemmedWord );\n\t\tforms.push( ...createForms( stemmedWord ) );\n\t}\n\treturn forms;\n}\n"]}