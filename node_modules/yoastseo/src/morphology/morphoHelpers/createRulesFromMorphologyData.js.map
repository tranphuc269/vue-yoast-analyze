{"version":3,"sources":["../../../../src/morphology/morphoHelpers/createRulesFromMorphologyData.js"],"names":["createSingleRuleFromMorphologyData","rule","flags","length","reg","RegExp","repl","repl1","repl2","createRulesFromMorphologyData","rules","map"],"mappings":";;;;;AAAA;;;;;;;;;AASA,MAAMA,qCAAqC,SAArCA,kCAAqC,CAAUC,IAAV,EAAgBC,QAAQ,GAAxB,EAA8B;AACxE,MAAKD,KAAKE,MAAL,KAAgB,CAArB,EAAyB;AACxB,WAAO;AACNC,WAAK,IAAIC,MAAJ,CAAYJ,KAAM,CAAN,CAAZ,EAAuBC,KAAvB,CADC;AAENI,YAAML,KAAM,CAAN;AAFA,KAAP;AAIA;AACD,MAAKA,KAAKE,MAAL,KAAgB,CAArB,EAAyB;AACxB,WAAO;AACNC,WAAK,IAAIC,MAAJ,CAAYJ,KAAM,CAAN,CAAZ,EAAuBC,KAAvB,CADC;AAENK,aAAON,KAAM,CAAN,CAFD;AAGNO,aAAOP,KAAM,CAAN;AAHD,KAAP;AAKA;AACD,CAdD;;AAgBA;;;;;;;;;AASA,MAAMQ,gCAAgC,SAAhCA,6BAAgC,CAAUC,KAAV,EAAiBR,QAAQ,GAAzB,EAA+B;AACpE,SAAOQ,MAAMC,GAAN,CAAWV,QAAQD,mCAAoCC,IAApC,EAA0CC,KAA1C,CAAnB,CAAP;AACA,CAFD;;QAKCF,kC,GAAAA,kC;QACAS,6B,GAAAA,6B;kBAGcA,6B","file":"createRulesFromMorphologyData.js","sourcesContent":["/**\n * Creates an object with a regex and a replacement pair to be processed.\n *\n * @param {Array}   rule        A pair or triplet of strings of which the first one is the regex to match\n *                              and the second (and the third) is the replacement.\n * @param {string}  [flags=i]   The regex flags to use.\n *\n * @returns {{ reg: RegExp, repl: string }|{ reg: RegExp, repl1: string, repl2: string }} Object to be used in the regex-based rules.\n */\nconst createSingleRuleFromMorphologyData = function( rule, flags = \"i\" ) {\n\tif ( rule.length === 2 ) {\n\t\treturn {\n\t\t\treg: new RegExp( rule[ 0 ], flags ),\n\t\t\trepl: rule[ 1 ],\n\t\t};\n\t}\n\tif ( rule.length === 3 ) {\n\t\treturn {\n\t\t\treg: new RegExp( rule[ 0 ], flags ),\n\t\t\trepl1: rule[ 1 ],\n\t\t\trepl2: rule[ 2 ],\n\t\t};\n\t}\n};\n\n/**\n * Creates an array of objects with a regex and a replacement pair to be processed.\n *\n * @param {Array}   rules       An array with pairs or triplets of strings of which the first one is the regex to match\n *                              and the second (and the third) is the replacement.\n * @param {string} [flags=i]    The regex flags to use.\n *\n * @returns {Array} Array of objects to be used in the regex-based rules.\n */\nconst createRulesFromMorphologyData = function( rules, flags = \"i\" ) {\n\treturn rules.map( rule => createSingleRuleFromMorphologyData( rule, flags ) );\n};\n\nexport {\n\tcreateSingleRuleFromMorphologyData,\n\tcreateRulesFromMorphologyData,\n};\n\nexport default createRulesFromMorphologyData;\n"]}