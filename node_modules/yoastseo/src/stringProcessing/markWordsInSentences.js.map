{"version":3,"sources":["../../../src/stringProcessing/markWordsInSentences.js"],"names":["markWordsInSentences","collectMarkingsInSentence","sentence","topicFoundInSentence","markup","replace","x","RegExp","wordsToMark","sentences","locale","markings","forEach","matches","length","concat","Mark","original","marked"],"mappings":";;;;;QAgCgBA,oB,GAAAA,oB;;AAhChB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;AAUA,MAAMC,4BAA4B,SAA5BA,yBAA4B,CAAUC,QAAV,EAAoBC,oBAApB,EAA2C;AAC5E,QAAMC,SAASF,SAASG,OAAT,CAAkB,oCAAcF,oBAAd,CAAlB,EAAwD,UAAUG,CAAV,EAAc;AACpF,WAAO,iCAASA,CAAT,CAAP;AACA,GAFc,CAAf;;AAIA,SAASF,OAAOC,OAAP,CAAgB,IAAIE,MAAJ,CAAY,kDAAZ,EAAgE,IAAhE,CAAhB,EAAwF,GAAxF,CAAT;AACA,CAND;;AAQA;;;;;;;;;AASO,SAASP,oBAAT,CAA+BQ,WAA/B,EAA4CC,SAA5C,EAAuDC,MAAvD,EAAgE;AACtE,MAAIP,uBAAuB,EAA3B;AACA,MAAIQ,WAAW,EAAf;;AAEAF,YAAUG,OAAV,CAAmB,UAAUV,QAAV,EAAqB;AACvCC,2BAAuB,kCAAYD,QAAZ,EAAsBM,WAAtB,EAAmCE,MAAnC,EAA4CG,OAAnE;;AAEA,QAAKV,qBAAqBW,MAArB,GAA8B,CAAnC,EAAuC;AACtCH,iBAAWA,SAASI,MAAT,CAAiB,IAAIC,cAAJ,CAAU;AACrCC,kBAAUf,QAD2B;AAErCgB,gBAAQjB,0BAA2BC,QAA3B,EAAqCC,oBAArC;AAF6B,OAAV,CAAjB,CAAX;AAIA;AACD,GATD;;AAWA,SAAOQ,QAAP;AACA","file":"markWordsInSentences.js","sourcesContent":["import matchWords from \"./matchTextWithArray\";\nimport arrayToRegex from \"./createRegexFromArray\";\nimport addMark from \"../markers/addMarkSingleWord\";\nimport Mark from \"../values/Mark\";\n\n/**\n * Adds marks to a sentence and merges marks if those are only separated by a space\n * (e.g., if highlighting words \"ballet\" and \"shoes\" in a sentence \"I have a lot of ballet shoes and other paraphernalia.\"\n * the marks will be put around \"ballet shoes\" together, not \"`ballet` `shoes`\".)\n *\n * @param {string}    sentence               The sentence to mark words in.\n * @param {[string]}  topicFoundInSentence   The words to mark in the sentence.\n *\n * @returns {string} The sentence with marks.\n */\nconst collectMarkingsInSentence = function( sentence, topicFoundInSentence ) {\n\tconst markup = sentence.replace( arrayToRegex( topicFoundInSentence ), function( x ) {\n\t\treturn addMark( x );\n\t} );\n\n\treturn ( markup.replace( new RegExp( \"</yoastmark> <yoastmark class='yoast-text-mark'>\", \"ig\" ), \" \" ) );\n};\n\n/**\n * Adds marks to an array of sentences.\n *\n * @param {[string]}    wordsToMark The words to mark.\n * @param {[string]}    sentences   The sentences in which to mark these words.\n * @param {string}      locale      The locale.\n *\n * @returns {[string]} The sentences with marks.\n */\nexport function markWordsInSentences( wordsToMark, sentences, locale ) {\n\tlet topicFoundInSentence = [];\n\tlet markings = [];\n\n\tsentences.forEach( function( sentence ) {\n\t\ttopicFoundInSentence = matchWords( sentence, wordsToMark, locale ).matches;\n\n\t\tif ( topicFoundInSentence.length > 0 ) {\n\t\t\tmarkings = markings.concat( new Mark( {\n\t\t\t\toriginal: sentence,\n\t\t\t\tmarked: collectMarkingsInSentence( sentence, topicFoundInSentence ),\n\t\t\t} ) );\n\t\t}\n\t} );\n\n\treturn markings;\n}\n"]}