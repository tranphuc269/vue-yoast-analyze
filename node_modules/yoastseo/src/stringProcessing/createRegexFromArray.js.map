{"version":3,"sources":["../../../src/stringProcessing/createRegexFromArray.js"],"names":["array","disableWordBoundary","extraBoundary","doReplaceDiacritics","string","regexString","join","RegExp"],"mappings":";;;;;;kBAiBe,UAAUA,KAAV,EAAiBC,sBAAsB,KAAvC,EAA8CC,gBAAgB,EAA9D,EAAkEC,sBAAsB,KAAxF,EAAgG;AAC9GH,SAAQ,mBAAKA,KAAL,EAAY,UAAUI,MAAV,EAAmB;AACtC,MAAKD,mBAAL,EAA2B;AAC1BC,YAAS,iCAAmBA,MAAnB,CAAT;AACA;;AAEDA,WAAS,8BAAgBA,MAAhB,CAAT;;AAEA,MAAKH,mBAAL,EAA2B;AAC1B,UAAOG,MAAP;AACA;AACD,SAAO,+BAAiBA,MAAjB,EAAyB,IAAzB,EAA+BF,aAA/B,CAAP;AACA,EAXO,CAAR;;AAaA,OAAMG,cAAc,MAAML,MAAMM,IAAN,CAAY,KAAZ,CAAN,GAA4B,GAAhD;;AAEA,QAAO,IAAIC,MAAJ,CAAYF,WAAZ,EAAyB,IAAzB,CAAP;AACA,C;;AAhCD;;AACA;;;;AACA;;;;AACA","file":"createRegexFromArray.js","sourcesContent":["/** @module stringProcessing/createRegexFromArray */\n\nimport { map } from \"lodash-es\";\nimport addWordBoundary from \"./addWordboundary.js\";\nimport replaceDiacritics from \"./replaceDiacritics\";\nimport sanitizeString from \"./sanitizeString\";\n\n/**\n * Creates a regex of combined strings from the input array.\n *\n * @param {string[]} array                              The array with strings.\n * @param {boolean} [disableWordBoundary=false]         Boolean indicating whether or not to disable word boundaries.\n * @param {string} [extraBoundary=\"\"]                   A string that is used as extra boundary for the regex.\n * @param {boolean} [doReplaceDiacritics=false]         If set to true, it replaces diacritics. Defaults to false.\n *\n * @returns {RegExp} regex                              The regex created from the array.\n */\nexport default function( array, disableWordBoundary = false, extraBoundary = \"\", doReplaceDiacritics = false ) {\n\tarray = map( array, function( string ) {\n\t\tif ( doReplaceDiacritics ) {\n\t\t\tstring = replaceDiacritics( string );\n\t\t}\n\n\t\tstring = sanitizeString( string );\n\n\t\tif ( disableWordBoundary ) {\n\t\t\treturn string;\n\t\t}\n\t\treturn addWordBoundary( string, true, extraBoundary );\n\t} );\n\n\tconst regexString = \"(\" + array.join( \")|(\" ) + \")\";\n\n\treturn new RegExp( regexString, \"ig\" );\n}\n"]}