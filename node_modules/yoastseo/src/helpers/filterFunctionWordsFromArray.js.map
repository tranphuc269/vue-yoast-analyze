{"version":3,"sources":["../../../src/helpers/filterFunctionWordsFromArray.js"],"names":["array","language","functionWords","getFunctionWords","length","arrayFiltered","word","all","trim","toLocaleLowerCase"],"mappings":";;;;;;kBAae,UAAUA,KAAV,EAAiBC,QAAjB,EAA4B;AAC1C,KAAK,2BAAaA,QAAb,KAA2BA,aAAa,EAA7C,EAAkD;AACjDA,aAAW,IAAX;AACA;;AAED,OAAMC,gBAAgB,mBAAKC,gBAAL,EAAuB,CAAEF,QAAF,CAAvB,EAAqC,EAArC,CAAtB;;AAEA,KAAKD,MAAMI,MAAN,GAAe,CAApB,EAAwB;AACvB,QAAMC,gBAAgB,sBAAQL,KAAR,EAAe,UAAUM,IAAV,EAAiB;AACrD,UAAS,CAAE,wBAAUJ,cAAcK,GAAxB,EAA6BD,KAAKE,IAAL,GAAYC,iBAAZ,EAA7B,CAAX;AACA,GAFqB,CAAtB;;AAIA,MAAKJ,cAAcD,MAAd,GAAuB,CAA5B,EAAgC;AAC/B,UAAOC,aAAP;AACA;AACD;;AAED,QAAOL,KAAP;AACA,C;;AA/BD;;;;AACA;;;;AAEA,MAAMG,mBAAmB,iCAAzB;;AAEA","file":"filterFunctionWordsFromArray.js","sourcesContent":["import getFunctionWordsFactory from \"../helpers/getFunctionWords.js\";\nimport { filter, get, includes, isUndefined } from \"lodash-es\";\n\nconst getFunctionWords = getFunctionWordsFactory();\n\n/**\n * Filters function words from an array of words based on the language.\n *\n * @param {Array} array The words to check.\n * @param {string} language The language to take function words for.\n *\n * @returns {Array} The original array with the function words filtered out.\n */\nexport default function( array, language ) {\n\tif ( isUndefined( language ) || language === \"\" ) {\n\t\tlanguage = \"en\";\n\t}\n\n\tconst functionWords = get( getFunctionWords, [ language ], [] );\n\n\tif ( array.length > 1 ) {\n\t\tconst arrayFiltered = filter( array, function( word ) {\n\t\t\treturn ( ! includes( functionWords.all, word.trim().toLocaleLowerCase() ) );\n\t\t} );\n\n\t\tif ( arrayFiltered.length > 0 ) {\n\t\t\treturn arrayFiltered;\n\t\t}\n\t}\n\n\treturn array;\n}\n"]}