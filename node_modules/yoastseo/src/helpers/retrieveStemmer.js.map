{"version":3,"sources":["../../../src/helpers/retrieveStemmer.js"],"names":["language","morphologyData","stemFunction","stemFunctions","word"],"mappings":";;;;;;kBAae,UAAUA,QAAV,EAAoBC,cAApB,EAAqC;AACnD,QAAMC,eAAeC,cAAeH,QAAf,CAArB;;AAEA;AACA,MAAKC,kBAAkBC,YAAvB,EAAsC;AACrC,WAAOA,YAAP;AACA;;AAED;AACA,SAAOE,QAAQA,IAAf;AACA,C;;AAvBD;;;;;;AACA,MAAMD,gBAAgB,mCAAtB;;AAGA","file":"retrieveStemmer.js","sourcesContent":["import getStemForLanguageFactory from \"../helpers/getStemForLanguage\";\nconst stemFunctions = getStemForLanguageFactory();\n\n\n/**\n * Retrieves a stemmer function from the factory.\n * Returns the identity function if the language does not have a stemmer or if morphology data isn't available.\n *\n * @param {string} language         The language to retrieve a stemmer function for.\n * @param {Object} morphologyData   The morphology data.\n *\n * @returns {Function} A stemmer function for the language.\n */\nexport default function( language, morphologyData ) {\n\tconst stemFunction = stemFunctions[ language ];\n\n\t// Return the stem function if there is one for the given language and if morphology data is available.\n\tif ( morphologyData && stemFunction ) {\n\t\treturn stemFunction;\n\t}\n\n\t// Return an identity function if the stem function and/or morphology data aren't available.\n\treturn word => word;\n}\n"]}