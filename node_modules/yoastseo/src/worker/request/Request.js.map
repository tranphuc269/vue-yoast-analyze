{"version":3,"sources":["../../../../src/worker/request/Request.js"],"names":["Request","constructor","resolve","reject","data","_resolve","_reject","_data","payload","result","Result"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;AAMe,MAAMA,OAAN,CAAc;AAC5B;;;;;;;AAOAC,aAAaC,OAAb,EAAsBC,MAAtB,EAA8BC,OAAO,EAArC,EAA0C;AACzC,OAAKC,QAAL,GAAgBH,OAAhB;AACA,OAAKI,OAAL,GAAeH,MAAf;AACA,OAAKI,KAAL,GAAaH,IAAb;AACA;;AAED;;;;;;;AAOAF,SAASM,UAAU,EAAnB,EAAwB;AACvB,QAAMC,SAAS,IAAIC,gBAAJ,CAAYF,OAAZ,EAAqB,KAAKD,KAA1B,CAAf;AACA,OAAKF,QAAL,CAAeI,MAAf;AACA;;AAED;;;;;;;AAOAN,QAAQK,UAAU,EAAlB,EAAuB;AACtB,QAAMC,SAAS,IAAIC,gBAAJ,CAAYF,OAAZ,EAAqB,KAAKD,KAA1B,CAAf;AACA,OAAKD,OAAL,CAAcG,MAAd;AACA;AApC2B;kBAART,O","file":"Request.js","sourcesContent":["import Result from \"./Result\";\n\n/**\n * Request serves as helper for the AnalysisWorkerWrapper.\n *\n * It holds the resolve and reject functions that it needs to fulfill the\n * promise. Any optional data will get included in the Result it can generate.\n */\nexport default class Request {\n\t/**\n\t * Initializes a request.\n\t *\n\t * @param {Function} resolve The resolve function.\n\t * @param {Function} reject  The reject function.\n\t * @param {Object}  [data]   Optional extra data.\n\t */\n\tconstructor( resolve, reject, data = {} ) {\n\t\tthis._resolve = resolve;\n\t\tthis._reject = reject;\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * Resolves the request with a result.\n\t *\n\t * @param {Object} [payload] Optional payload.\n\t *\n\t * @returns {void}\n\t */\n\tresolve( payload = {} ) {\n\t\tconst result = new Result( payload, this._data );\n\t\tthis._resolve( result );\n\t}\n\n\t/**\n\t * Rejects the request with a result.\n\t *\n\t * @param {Object} [payload] Optional payload.\n\t *\n\t * @returns {void}\n\t */\n\treject( payload = {} ) {\n\t\tconst result = new Result( payload, this._data );\n\t\tthis._reject( result );\n\t}\n}\n"]}