{"version":3,"sources":["../../../src/worker/AnalysisWorkerWrapper.js"],"names":["AnalysisWorkerWrapper","constructor","worker","_worker","_requests","_autoIncrementedRequestId","initialize","bind","analyze","analyzeRelatedKeywords","loadScript","sendMessage","runResearch","handleMessage","handleMessageError","handleError","onmessage","onmessageerror","onerror","data","type","id","payload","request","console","warn","Transporter","parse","resolve","reject","event","requestKeys","Object","keys","lastRequestId","length","lastRequest","error","createRequestId","createRequestPromise","Promise","Request","sendRequest","action","promise","send","serialize","postMessage","configuration","paper","relatedKeywords","url","name","pluginName"],"mappings":"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","file":"AnalysisWorkerWrapper.js","sourcesContent":["// Internal dependencies.\nimport Request from \"./request\";\nimport Transporter from \"./transporter\";\n\n/**\n * Analysis worker is an API around the Web Worker.\n */\nclass AnalysisWorkerWrapper {\n\t/**\n\t * Initializes the AnalysisWorkerWrapper class.\n\t *\n\t * @param {Worker} worker The worker to wrap.\n\t *\n\t * @constructor\n\t */\n\tconstructor( worker ) {\n\t\t// Initialize instance variables.\n\t\tthis._worker = worker;\n\t\tthis._requests = {};\n\t\tthis._autoIncrementedRequestId = -1;\n\n\t\t// Bind actions to this scope.\n\t\tthis.initialize = this.initialize.bind( this );\n\t\tthis.analyze = this.analyze.bind( this );\n\t\tthis.analyzeRelatedKeywords = this.analyzeRelatedKeywords.bind( this );\n\t\tthis.loadScript = this.loadScript.bind( this );\n\t\tthis.sendMessage = this.sendMessage.bind( this );\n\t\tthis.runResearch = this.runResearch.bind( this );\n\n\t\t// Bind event handlers to this scope.\n\t\tthis.handleMessage = this.handleMessage.bind( this );\n\t\tthis.handleMessageError = this.handleMessageError.bind( this );\n\t\tthis.handleError = this.handleError.bind( this );\n\n\t\t// Initialize the worker event handlers.\n\t\tthis._worker.onmessage = this.handleMessage;\n\t\tthis._worker.onmessageerror = this.handleMessageError;\n\t\tthis._worker.onerror = this.handleError;\n\t}\n\n\t/**\n\t * Receives the messages and determines the action.\n\t *\n\t * See: https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage\n\t *\n\t * @param {MessageEvent} event              The post message event.\n\t * @param {Object}       event.data         The data object.\n\t * @param {string}       event.data.type    The action type.\n\t * @param {number}       event.data.id      The request id.\n\t * @param {string}       event.data.payload The payload of the action.\n\t *\n\t * @returns {void}\n\t */\n\thandleMessage( { data: { type, id, payload } } ) {\n\t\tconst request = this._requests[ id ];\n\t\tif ( ! request ) {\n\t\t\tconsole.warn( \"AnalysisWebWorker unmatched response:\", payload );\n\t\t\treturn;\n\t\t}\n\n\t\tpayload = Transporter.parse( payload );\n\n\t\tswitch ( type ) {\n\t\t\tcase \"initialize:done\":\n\t\t\tcase \"loadScript:done\":\n\t\t\tcase \"customMessage:done\":\n\t\t\tcase \"runResearch:done\":\n\t\t\tcase \"analyzeRelatedKeywords:done\":\n\t\t\tcase \"analyze:done\":\n\t\t\t\trequest.resolve( payload );\n\t\t\t\tbreak;\n\t\t\tcase \"analyze:failed\":\n\t\t\tcase \"loadScript:failed\":\n\t\t\tcase \"customMessage:failed\":\n\t\t\tcase \"runResearch:failed\":\n\t\t\tcase \"analyzeRelatedKeywords:failed\":\n\t\t\t\trequest.reject( payload );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( \"AnalysisWebWorker unrecognized action:\", type );\n\t\t}\n\n\t\t// Remove the handled request from our queue.\n\t\tdelete this._requests[ id ];\n\t}\n\n\t/**\n\t * Receives the message errors.\n\t *\n\t * See: https://developer.mozilla.org/en-US/docs/Web/Events/messageerror\n\t *\n\t * @param {MessageEvent} event The message event for the error that\n\t *                             occurred.\n\t *\n\t * @returns {void}\n\t */\n\thandleMessageError( event ) {\n\t\tconsole.warn( \"AnalysisWebWorker message error:\", event );\n\t}\n\n\t/**\n\t * Receives the errors.\n\t *\n\t * See:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/AbstractWorker/onerror\n\t *\n\t * @param {Error} event The error event.\n\t *\n\t * @returns {void}\n\t */\n\thandleError( event ) {\n\t\t/*\n\t\t * Try to get the last request. This might not perfectly match the request error.\n\t\t * However, that is not as bad as not being able to reject it like this.\n\t\t *\n\t\t * This is not the _autoIncrementedRequestId because that might be a\n\t\t * request that is handled already. Instead the last object key is used.\n\t\t */\n\t\tconst requestKeys = Object.keys( this._requests );\n\t\tconst lastRequestId = requestKeys[ requestKeys.length - 1 ];\n\t\tconst lastRequest = this._requests[ lastRequestId ];\n\t\tif ( ! lastRequest ) {\n\t\t\tconsole.error( \"AnalysisWebWorker error:\", event );\n\t\t\treturn;\n\t\t}\n\t\tlastRequest.reject( event );\n\t}\n\n\t/**\n\t * Increments the request id.\n\t *\n\t * @returns {number} The incremented id.\n\t */\n\tcreateRequestId() {\n\t\tthis._autoIncrementedRequestId++;\n\t\treturn this._autoIncrementedRequestId;\n\t}\n\n\t/**\n\t * Creates a new request inside a Promise.\n\t *\n\t * @param {number} id     The request id.\n\t * @param {Object} [data] Optional extra data.\n\t *\n\t * @returns {Promise} The callback promise.\n\t */\n\tcreateRequestPromise( id, data = {} ) {\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\tthis._requests[ id ] = new Request( resolve, reject, data );\n\t\t} );\n\t}\n\n\t/**\n\t * Sends a request to the worker and returns a promise that will resolve or reject once the worker finishes.\n\t *\n\t * @param {string} action  The action of the request.\n\t * @param {Object} payload The payload of the request.\n\t * @param {Object} [data]  Optional extra data.\n\t *\n\t * @returns {Promise} A promise that will resolve or reject once the worker finishes.\n\t */\n\tsendRequest( action, payload, data = {} ) {\n\t\tconst id = this.createRequestId();\n\t\tconst promise = this.createRequestPromise( id, data );\n\n\t\tthis.send( action, id, payload );\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Sends a message to the worker.\n\t *\n\t * @param {string} type      The message type.\n\t * @param {number} id        The request id.\n\t * @param {Object} [payload] The payload to deliver.\n\t *\n\t * @returns {void}\n\t */\n\tsend( type, id, payload = {} ) {\n\t\tpayload = Transporter.serialize( payload );\n\n\t\tthis._worker.postMessage( {\n\t\t\ttype,\n\t\t\tid,\n\t\t\tpayload,\n\t\t} );\n\t}\n\n\t/**\n\t * Initializes the worker with a configuration.\n\t *\n\t * @param {Object} configuration The configuration to initialize the worker\n\t *                               with.\n\t *\n\t * @returns {Promise} The promise of initialization.\n\t */\n\tinitialize( configuration ) {\n\t\treturn this.sendRequest( \"initialize\", configuration );\n\t}\n\n\t/**\n\t * Analyzes the paper.\n\t *\n\t * @param {Object} paper           The paper to analyze.\n\t * @param {Object} relatedKeywords The related keywords.\n\t *\n\t * @returns {Promise} The promise of analyses.\n\t */\n\tanalyzeRelatedKeywords( paper, relatedKeywords = {} ) {\n\t\treturn this.sendRequest( \"analyzeRelatedKeywords\", { paper, relatedKeywords } );\n\t}\n\n\t/**\n\t * Analyzes the paper.\n\t *\n\t * @param {Object} paper           The paper to analyze.\n\t *\n\t * @returns {Promise} The promise of analyses.\n\t */\n\tanalyze( paper ) {\n\t\treturn this.sendRequest( \"analyze\", { paper } );\n\t}\n\n\t/**\n\t * Imports a script to the worker.\n\t *\n\t * @param {string} url The relative url to the script to be loaded.\n\t *\n\t * @returns {Promise} The promise of the script import.\n\t */\n\tloadScript( url ) {\n\t\treturn this.sendRequest( \"loadScript\", { url } );\n\t}\n\n\t/**\n\t * Sends a custom message to the worker.\n\t *\n\t * @param {string} name       The name of the message.\n\t * @param {string} data       The data of the message.\n\t * @param {string} pluginName The plugin that registered this type of message.\n\t *\n\t * @returns {Promise} The promise of the custom message.\n\t */\n\tsendMessage( name, data, pluginName ) {\n\t\tname = pluginName + \"-\" + name;\n\t\treturn this.sendRequest( \"customMessage\", { name, data }, data );\n\t}\n\n\t/**\n\t * Runs the specified research in the worker. Optionally pass a paper.\n\t *\n\t * @param {string} name    The name of the research to run.\n\t * @param {Paper} [paper] The paper to run the research on if it shouldn't\n\t *                         be run on the latest paper.\n\t *\n\t * @returns {Promise} The promise of the research.\n\t */\n\trunResearch( name, paper = null ) {\n\t\treturn this.sendRequest( \"runResearch\", { name, paper } );\n\t}\n}\n\nexport default AnalysisWorkerWrapper;\n"]}