{"version":3,"sources":["../../../../src/worker/transporter/parse.js"],"names":["parse","PARSE_CLASSES","AssessmentResult","Mark","Paper","Participle","Sentence","SentencePart","WordCombination","ProminentWord","thing","map","thingIsObject","_parseClass","value"],"mappings":";;;;;kBA+BwBA,K;;AA/BxB;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMC,gBAAgB;AACrBC,6CADqB;AAErBC,qBAFqB;AAGrBC,uBAHqB;AAIrBC,iCAJqB;AAKrBC,6BALqB;AAMrBC,qCANqB;AAOrBC,2CAPqB;AAQrBC;AARqB,CAAtB;;AAWA;;;;;;;AAOe,SAAST,KAAT,CAAgBU,KAAhB,EAAwB;AACtC,KAAK,uBAASA,KAAT,CAAL,EAAwB;AACvB,SAAOA,MAAMC,GAAN,CAAWX,KAAX,CAAP;AACA;;AAED,OAAMY,gBAAgB,wBAAUF,KAAV,CAAtB;;AAEA,KAAKE,iBAAiBF,MAAMG,WAAvB,IAAsCZ,cAAeS,MAAMG,WAArB,CAA3C,EAAgF;AAC/E,SAAOZ,cAAeS,MAAMG,WAArB,EAAmCb,KAAnC,CAA0CU,KAA1C,CAAP;AACA;;AAED,KAAKE,aAAL,EAAqB;AACpB,SAAO,yBAAWF,KAAX,EAAoBI,KAAF,IAAad,MAAOc,KAAP,CAA/B,CAAP;AACA;;AAED,QAAOJ,KAAP;AACA","file":"parse.js","sourcesContent":["import { isArray } from \"lodash-es\";\nimport { isObject } from \"lodash-es\";\nimport { mapValues } from \"lodash-es\";\n\nimport AssessmentResult from \"../../values/AssessmentResult\";\nimport Mark from \"../../values/Mark\";\nimport Paper from \"../../values/Paper\";\nimport Participle from \"../../values/Participle\";\nimport Sentence from \"../../values/Sentence\";\nimport SentencePart from \"../../values/SentencePart\";\nimport WordCombination from \"../../values/WordCombination\";\nimport ProminentWord from \"../../values/ProminentWord\";\n\nconst PARSE_CLASSES = {\n\tAssessmentResult,\n\tMark,\n\tPaper,\n\tParticiple,\n\tSentence,\n\tSentencePart,\n\tWordCombination,\n\tProminentWord,\n};\n\n/**\n * Parses a data structure that has previously been serialized.\n *\n * @param {*} thing The data structure to parse.\n *\n * @returns {*} The parsed data structure.\n */\nexport default function parse( thing ) {\n\tif ( isArray( thing ) ) {\n\t\treturn thing.map( parse );\n\t}\n\n\tconst thingIsObject = isObject( thing );\n\n\tif ( thingIsObject && thing._parseClass && PARSE_CLASSES[ thing._parseClass ] ) {\n\t\treturn PARSE_CLASSES[ thing._parseClass ].parse( thing );\n\t}\n\n\tif ( thingIsObject ) {\n\t\treturn mapValues( thing, ( value ) => parse( value ) );\n\t}\n\n\treturn thing;\n}\n"]}