{"remainingRequest":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/babel-loader/lib/index.js!/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/phuctran/Desktop/vue-yoast-analyze/demo/main.js","dependencies":[{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/demo/main.js","mtime":1644746043033},{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/cache-loader/dist/cjs.js","mtime":1644555803279},{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/babel-loader/lib/index.js","mtime":1644555802966},{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1644555802825}],"contextDependencies":[],"result":["// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue/dist/vue.js';\nimport App from './App';\nimport BootstrapVue from 'bootstrap-vue';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport CKEditor from 'ckeditor4-vue';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport Vuex from 'vuex';\nVue.use(BootstrapVue);\nVue.use(Vuex);\nVue.use(CKEditor);\nVue.config.productionTip = true;\nVue.mixin({\n  methods: {\n    globalHelper: function () {\n      console.log('Hello world');\n    }\n  }\n});\nconst store = new Vuex.Store({\n  state: {\n    responseData: []\n  },\n  getters: {\n    getRes(state) {\n      window.parent.postMessage(state.responseData, '*');\n      console.log('state : ' + state.responseData);\n      return state.responseData;\n    }\n\n  },\n  mutations: {\n    addResponse(state, res) {\n      if (res.startsWith('/') || res.startsWith(' ')) {} else {\n        state.responseData.push(res);\n      }\n    }\n\n  }\n});\nnew Vue({\n  render: h => h(App),\n  store\n}).$mount('#app');",{"version":3,"sources":["/Users/phuctran/Desktop/vue-yoast-analyze/demo/main.js"],"names":["Vue","App","BootstrapVue","CKEditor","Vuex","use","config","productionTip","mixin","methods","globalHelper","console","log","store","Store","state","responseData","getters","getRes","window","parent","postMessage","mutations","addResponse","res","startsWith","push","render","h","$mount"],"mappings":"AAAA;AACA;AACA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAO,kCAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAJ,GAAG,CAACK,GAAJ,CAAQH,YAAR;AACAF,GAAG,CAACK,GAAJ,CAAQD,IAAR;AACAJ,GAAG,CAACK,GAAJ,CAAQF,QAAR;AACAH,GAAG,CAACM,MAAJ,CAAWC,aAAX,GAA2B,IAA3B;AACAP,GAAG,CAACQ,KAAJ,CAAU;AACRC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,YAAY;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AAHM;AADD,CAAV;AAQA,MAAMC,KAAK,GAAG,IAAIT,IAAI,CAACU,KAAT,CAAe;AAC3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE;AADT,GADoB;AAI3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,CAAEH,KAAF,EAAS;AACbI,MAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0BN,KAAK,CAACC,YAAhC,EAA8C,GAA9C;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaG,KAAK,CAACC,YAA/B;AACA,aAAOD,KAAK,CAACC,YAAb;AACD;;AALM,GAJkB;AAW3BM,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,CAAER,KAAF,EAASS,GAAT,EAAc;AACvB,UAAIA,GAAG,CAACC,UAAJ,CAAe,GAAf,KAAuBD,GAAG,CAACC,UAAJ,CAAe,GAAf,CAA3B,EAAgD,CAE/C,CAFD,MAEO;AACLV,QAAAA,KAAK,CAACC,YAAN,CAAmBU,IAAnB,CAAwBF,GAAxB;AACD;AACF;;AAPQ;AAXgB,CAAf,CAAd;AAsBA,IAAIxB,GAAJ,CAAQ;AACN2B,EAAAA,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAC3B,GAAD,CADR;AAENY,EAAAA;AAFM,CAAR,EAGGgB,MAHH,CAGU,MAHV","sourcesContent":["// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue/dist/vue.js'\nimport App from './App'\nimport BootstrapVue from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport CKEditor from 'ckeditor4-vue'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport Vuex from 'vuex'\n\nVue.use(BootstrapVue)\nVue.use(Vuex)\nVue.use(CKEditor)\nVue.config.productionTip = true\nVue.mixin({\n  methods: {\n    globalHelper: function () {\n      console.log('Hello world')\n    }\n  }\n})\n\nconst store = new Vuex.Store({\n  state: {\n    responseData: []\n  },\n  getters: {\n    getRes (state) {\n      window.parent.postMessage(state.responseData, '*')\n      console.log('state : ' + state.responseData)\n      return state.responseData\n    }\n  },\n  mutations: {\n    addResponse (state, res) {\n      if (res.startsWith('/') || res.startsWith(' ')) {\n\n      } else {\n        state.responseData.push(res)\n      }\n    }\n  }\n})\n\nnew Vue({\n  render: h => h(App),\n  store\n}).$mount('#app')\n"]}]}