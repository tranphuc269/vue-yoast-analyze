{"remainingRequest":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/phuctran/Desktop/vue-yoast-analyze/src/snippet-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/src/snippet-preview.vue","mtime":1648871669224},{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/babel-loader/lib/index.js","mtime":1648871667009},{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/cache-loader/dist/cjs.js","mtime":1648871667080},{"path":"/Users/phuctran/Desktop/vue-yoast-analyze/node_modules/vue-loader/lib/index.js","mtime":1648871668930}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { rateTitleLength, rateMetaDescLength } from './utils.js'\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    metaHeight: {\n      type: Number,\n      default: 0\n    },\n    placeholder: {\n      type: Object,\n      default () {\n        return {\n          title: 'This is an example title',\n          metaDesc: 'This is meta description',\n          urlPath: 'example-post/'\n        }\n      }\n    },\n    defaultValue: {\n      type: Object,\n      default () {\n        return {\n          title: '',\n          metaDesc: ''\n        }\n      }\n    },\n    addTrailingSlash: {\n      type: Boolean,\n      default: true\n    },\n    metaDescriptionDate: {\n      type: String,\n      default: ''\n    },\n    previewMode: {\n      type: String,\n      default: 'desktop'\n    },\n    baseUrl: {\n      type: String,\n      default: ''\n    },\n    hasProgressSupport: {\n      type: Boolean,\n      default: true\n    },\n    maxTitleWidth: {\n      type: Number,\n      default: 600\n    },\n    maxDescriptionLength: {\n      type: Number,\n      default: 320\n    }\n  },\n  computed: {\n    description_ () {\n      const desc = this.description\n      const maxLength = this.maxDescriptionLength\n      const more = desc.length > maxLength ? ' ...' : ''\n      return desc.substr(0, maxLength) + more\n    }\n  },\n  watch: {\n    title () {\n      this.onTitleUpdated()\n    },\n    description () {\n      this.$emit('update:descriptionLengthPercent', (this.description.length / this.maxDescriptionLength) * 100)\n    }\n  },\n  methods: {\n    titleRate () {\n      const el = this.$refs.title\n      if (el) {\n        return rateTitleLength(this.$refs.title.offsetWidth)\n      }\n      return ''\n    },\n    descriptionRate () {\n      return rateMetaDescLength(this.description.length)\n    },\n    onTitleUpdated () {\n      const w = this.$refs.title.offsetWidth\n      this.$emit('update:titleWidth', w)\n      this.$emit('update:titleLengthPercent', (w / this.maxTitleWidth) * 100)\n    }\n  },\n  mounted () {\n    this.onTitleUpdated()\n  }\n}\n",{"version":3,"sources":["snippet-preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"snippet-preview.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"vue-yoast vue-yoast-snippet-preview\">\n    <div class=\"vue-yoast-snippet-preview-title\">\n      <span ref=\"title\" v-text=\"title\" />\n    </div>\n    <div class=\"vue-yoast-snippet-preview-url\">\n      <span ref=\"url\" v-text=\"baseUrl + url\"/>\n    </div>\n    <div class=\"vue-yoast-snippet-preview-description\">\n      <span ref=\"description\" v-text=\"description_\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { rateTitleLength, rateMetaDescLength } from './utils.js'\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    metaHeight: {\n      type: Number,\n      default: 0\n    },\n    placeholder: {\n      type: Object,\n      default () {\n        return {\n          title: 'This is an example title',\n          metaDesc: 'This is meta description',\n          urlPath: 'example-post/'\n        }\n      }\n    },\n    defaultValue: {\n      type: Object,\n      default () {\n        return {\n          title: '',\n          metaDesc: ''\n        }\n      }\n    },\n    addTrailingSlash: {\n      type: Boolean,\n      default: true\n    },\n    metaDescriptionDate: {\n      type: String,\n      default: ''\n    },\n    previewMode: {\n      type: String,\n      default: 'desktop'\n    },\n    baseUrl: {\n      type: String,\n      default: ''\n    },\n    hasProgressSupport: {\n      type: Boolean,\n      default: true\n    },\n    maxTitleWidth: {\n      type: Number,\n      default: 600\n    },\n    maxDescriptionLength: {\n      type: Number,\n      default: 320\n    }\n  },\n  computed: {\n    description_ () {\n      const desc = this.description\n      const maxLength = this.maxDescriptionLength\n      const more = desc.length > maxLength ? ' ...' : ''\n      return desc.substr(0, maxLength) + more\n    }\n  },\n  watch: {\n    title () {\n      this.onTitleUpdated()\n    },\n    description () {\n      this.$emit('update:descriptionLengthPercent', (this.description.length / this.maxDescriptionLength) * 100)\n    }\n  },\n  methods: {\n    titleRate () {\n      const el = this.$refs.title\n      if (el) {\n        return rateTitleLength(this.$refs.title.offsetWidth)\n      }\n      return ''\n    },\n    descriptionRate () {\n      return rateMetaDescLength(this.description.length)\n    },\n    onTitleUpdated () {\n      const w = this.$refs.title.offsetWidth\n      this.$emit('update:titleWidth', w)\n      this.$emit('update:titleLengthPercent', (w / this.maxTitleWidth) * 100)\n    }\n  },\n  mounted () {\n    this.onTitleUpdated()\n  }\n}\n</script>\n"]}]}