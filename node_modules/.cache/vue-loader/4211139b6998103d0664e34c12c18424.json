{"remainingRequest":"/Users/phuctran/Desktop/vue-yoast/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/phuctran/Desktop/vue-yoast/src/content-assessor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/phuctran/Desktop/vue-yoast/src/content-assessor.vue","mtime":1642011982075},{"path":"/Users/phuctran/Desktop/vue-yoast/node_modules/cache-loader/dist/cjs.js","mtime":1642012104452},{"path":"/Users/phuctran/Desktop/vue-yoast/node_modules/thread-loader/dist/cjs.js","mtime":1641892943592},{"path":"/Users/phuctran/Desktop/vue-yoast/node_modules/babel-loader/lib/index.js","mtime":1641890888063},{"path":"/Users/phuctran/Desktop/vue-yoast/node_modules/cache-loader/dist/cjs.js","mtime":1642012104452},{"path":"/Users/phuctran/Desktop/vue-yoast/node_modules/vue-loader/lib/index.js","mtime":1642012104859}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'debounce'\nimport { Paper, ContentAssessor, interpreters, string } from 'yoastseo'\nimport { getAssessorRatings, getI18n } from './utils.js'\n\nconst removeHtmlBlocks = string.removeHtmlBlocks\nconst scoreToRating = interpreters.scoreToRating\nconst ratings = getAssessorRatings()\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    titleWidth: {\n      type: Number,\n      default: 0\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    keyword: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    text: {\n      type: String,\n      default: ''\n    },\n    locale: {\n      type: String,\n      default: 'en_US'\n    },\n    marker: {\n      type: [Object, null],\n      default () {\n        return null\n      }\n    },\n    permalink: {\n      type: String,\n      default: ''\n    },\n    translations: {\n      type: Object,\n      default () {\n        return null\n      }\n    },\n    resultFilter: {\n      type: Function,\n      default (result) {\n        return result\n      }\n    }\n  },\n  data () {\n    return {\n      assessorResults: [],\n      assessorResultsByRating: {},\n      overallContentScore: null,\n      overallContentRating: null,\n      contentAssessor: null\n    }\n  },\n  computed: {\n    items () {\n      const res = []\n      ratings.forEach((rating) => {\n        const items = this.assessorResultsByRating[rating]\n        if (typeof items === 'undefined') return\n        items.forEach((item) => {\n          item._class = [\n            'vue-yoast-assessor-item',\n            'vue-yoast-assessor-item-' + item.rating\n          ]\n          res.push(item)\n        })\n      })\n      return res\n    }\n  },\n  watch: {\n    title (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    description (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    keyword (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    url (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    text (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    translations (newVal) {\n      this.i18n = getI18n(newVal)\n      this._debouncedRefresh()\n    },\n    locale (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    overallContentScore () {\n      this.$emit('update:overallScore', {\n        score: this.overallContentScore,\n        rating: this.overallContentRating\n      })\n    }\n  },\n  created () {\n    this._debouncedRefresh = debounce(this.refresh, 1000)\n  },\n  mounted () {\n    this.i18n = getI18n(this.translations)\n    this.refresh()\n  },\n  methods: {\n    refreshPaper () {\n      const text = removeHtmlBlocks(this.text)\n      this.paper = new Paper(text, {\n        keyword: this.keyword,\n        description: this.description,\n        url: this.url,\n        title: this.title,\n        titleWidth: this.titleWidth,\n        locale: this.locale,\n        permalink: this.permalink\n      })\n    },\n    refresh () {\n      this.refreshPaper()\n      this.contentAssessor = new ContentAssessor(this.i18n, { marker: this.marker })\n      this.contentAssessor.assess(this.paper)\n      this.overallScore = this.contentAssessor.calculateOverallScore()\n      this.overallRating = scoreToRating(this.contentAssessor.calculateOverallScore() / 10)\n      this.assessorResults = []\n      this.assessorResultsByRating = {}\n      this.contentAssessor.results.forEach(item => {\n        const result = this.resultFilter({\n          rating: scoreToRating(item.score),\n          socre: item.score,\n          text: item.text\n        })\n        this.assessorResults.push(result)\n        if (this.assessorResultsByRating.hasOwnProperty(result.rating)) {\n          this.assessorResultsByRating[result.rating].push(result)\n        } else {\n          this.assessorResultsByRating[result.rating] = [result]\n        }\n      })\n      this.$emit('update', {\n        results: this.assessorResults,\n        resultsByRating: this.assessorResultsByRating,\n        overallScore: this.overallScore,\n        overallRating: this.overallRating\n      })\n    }\n  }\n}\n",{"version":3,"sources":["content-assessor.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"content-assessor.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"vue-yoast vue-yoast-assessor vue-yoast-content-assessor\">\n    <div v-for=\"(item, index) in items\" :key=\"index\" :class=\"item._class\" >\n      <slot name=\"item\" v-bind:item=\"item\">\n        <span class=\"vue-yoast-assessor-badge\">&nbsp;</span>\n        <span class=\"vue-yoast-assessor-text\" v-html=\"item.text\"></span>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport debounce from 'debounce'\nimport { Paper, ContentAssessor, interpreters, string } from 'yoastseo'\nimport { getAssessorRatings, getI18n } from './utils.js'\n\nconst removeHtmlBlocks = string.removeHtmlBlocks\nconst scoreToRating = interpreters.scoreToRating\nconst ratings = getAssessorRatings()\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    titleWidth: {\n      type: Number,\n      default: 0\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    keyword: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    text: {\n      type: String,\n      default: ''\n    },\n    locale: {\n      type: String,\n      default: 'en_US'\n    },\n    marker: {\n      type: [Object, null],\n      default () {\n        return null\n      }\n    },\n    permalink: {\n      type: String,\n      default: ''\n    },\n    translations: {\n      type: Object,\n      default () {\n        return null\n      }\n    },\n    resultFilter: {\n      type: Function,\n      default (result) {\n        return result\n      }\n    }\n  },\n  data () {\n    return {\n      assessorResults: [],\n      assessorResultsByRating: {},\n      overallContentScore: null,\n      overallContentRating: null,\n      contentAssessor: null\n    }\n  },\n  computed: {\n    items () {\n      const res = []\n      ratings.forEach((rating) => {\n        const items = this.assessorResultsByRating[rating]\n        if (typeof items === 'undefined') return\n        items.forEach((item) => {\n          item._class = [\n            'vue-yoast-assessor-item',\n            'vue-yoast-assessor-item-' + item.rating\n          ]\n          res.push(item)\n        })\n      })\n      return res\n    }\n  },\n  watch: {\n    title (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    description (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    keyword (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    url (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    text (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    translations (newVal) {\n      this.i18n = getI18n(newVal)\n      this._debouncedRefresh()\n    },\n    locale (newVal, oldVal) {\n      if (newVal !== oldVal) this._debouncedRefresh()\n    },\n    overallContentScore () {\n      this.$emit('update:overallScore', {\n        score: this.overallContentScore,\n        rating: this.overallContentRating\n      })\n    }\n  },\n  created () {\n    this._debouncedRefresh = debounce(this.refresh, 1000)\n  },\n  mounted () {\n    this.i18n = getI18n(this.translations)\n    this.refresh()\n  },\n  methods: {\n    refreshPaper () {\n      const text = removeHtmlBlocks(this.text)\n      this.paper = new Paper(text, {\n        keyword: this.keyword,\n        description: this.description,\n        url: this.url,\n        title: this.title,\n        titleWidth: this.titleWidth,\n        locale: this.locale,\n        permalink: this.permalink\n      })\n    },\n    refresh () {\n      this.refreshPaper()\n      this.contentAssessor = new ContentAssessor(this.i18n, { marker: this.marker })\n      this.contentAssessor.assess(this.paper)\n      this.overallScore = this.contentAssessor.calculateOverallScore()\n      this.overallRating = scoreToRating(this.contentAssessor.calculateOverallScore() / 10)\n      this.assessorResults = []\n      this.assessorResultsByRating = {}\n      this.contentAssessor.results.forEach(item => {\n        const result = this.resultFilter({\n          rating: scoreToRating(item.score),\n          socre: item.score,\n          text: item.text\n        })\n        this.assessorResults.push(result)\n        if (this.assessorResultsByRating.hasOwnProperty(result.rating)) {\n          this.assessorResultsByRating[result.rating].push(result)\n        } else {\n          this.assessorResultsByRating[result.rating] = [result]\n        }\n      })\n      this.$emit('update', {\n        results: this.assessorResults,\n        resultsByRating: this.assessorResultsByRating,\n        overallScore: this.overallScore,\n        overallRating: this.overallRating\n      })\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"]}]}